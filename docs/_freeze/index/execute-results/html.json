{
  "hash": "ccfd12b254d75e7b8c1e1592a4e44a90",
  "result": {
    "markdown": "---\ntitle: xraypy\n---\n\n\n\nUseful functions\n\n<!-- badges: start -->\n[![Lifecycle: experimental](https://img.shields.io/badge/lifecycle-experimental-orange.svg)](https://lifecycle.r-lib.org/articles/stages.html#experimental)\n<!-- badges: end -->\n\n## Installation\n\n```bash\npython -m pip install git+https://github.com/uskovgs/xraypy.git\n```\n\n## Usage\n\nThis module is designed for correct rounding of numbers.\n\nThe primary functions are `latex_range` and `latex_range_sci`.\n\n### Numbers without exponents\n\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nimport numpy as np\nimport pandas as pd\nfrom xraypy.latex_table import latex_range, latex_range_sci\n\nB=3\nx = np.random.uniform(1, 10, size=B)\nerr_lo = np.random.uniform(0, 1, size=B)\nerr_up = np.random.uniform(0, 1, size=B)\nxmin = x - err_lo\nxmax = x + err_up\n```\n:::\n\n\nNon symmetric errors:\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\npd.DataFrame({\n    \"x\" : x,\n    \"xmin\" : xmin,\n    \"xmax\" : xmax,\n    \"latex\": latex_range(x, xmin, xmax)\n})\n```\n\n::: {.cell-output .cell-output-display execution_count=2}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>x</th>\n      <th>xmin</th>\n      <th>xmax</th>\n      <th>latex</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>3.163951</td>\n      <td>2.979332</td>\n      <td>4.082283</td>\n      <td>$3.16_{-0.18}^{+0.92}$</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>3.030980</td>\n      <td>2.404447</td>\n      <td>3.765541</td>\n      <td>$3.0_{-0.6}^{+0.7}$</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1.815523</td>\n      <td>1.508585</td>\n      <td>2.775639</td>\n      <td>$1.8_{-0.3}^{+1.0}$</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\nSymemtric errors:\n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\nxmax = x + err_lo\npd.DataFrame({\n    \"x\" : x,\n    \"xmin\" : xmin,\n    \"xmax\" : xmax,\n    \"latex\": latex_range(x, xmin, xmax)\n})\n```\n\n::: {.cell-output .cell-output-display execution_count=3}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>x</th>\n      <th>xmin</th>\n      <th>xmax</th>\n      <th>latex</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>3.163951</td>\n      <td>2.979332</td>\n      <td>3.348570</td>\n      <td>$3.16\\pm0.18$</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>3.030980</td>\n      <td>2.404447</td>\n      <td>3.657513</td>\n      <td>$3.0\\pm0.6$</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1.815523</td>\n      <td>1.508585</td>\n      <td>2.122460</td>\n      <td>$1.8\\pm0.3$</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n### Numbers with exponents\n\n::: {.cell execution_count=4}\n``` {.python .cell-code}\nx = np.array([1e21, 3e22, 1e23])\nerr = np.array([0.1e21, 0.5e21, 0.1e23])\n```\n:::\n\n\nAuto number of digits\n\n::: {.cell execution_count=5}\n``` {.python .cell-code}\npd.DataFrame({\n    \"x\" : x,\n    \"err\": err,\n    \"latex\": latex_range_sci(x, x-err, x+err)\n})\n```\n\n::: {.cell-output .cell-output-display execution_count=5}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>x</th>\n      <th>err</th>\n      <th>latex</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1.000000e+21</td>\n      <td>1.000000e+20</td>\n      <td>$1.00_{-0.10}^{+0.10}~\\times10^{21}$</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>3.000000e+22</td>\n      <td>5.000000e+20</td>\n      <td>$0.300_{-0.005}^{+0.005}~\\times10^{23}$</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1.000000e+23</td>\n      <td>1.000000e+22</td>\n      <td>$1.00_{-0.10}^{+0.10}~\\times10^{23}$</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\nFixed number of digits\n\n::: {.cell execution_count=6}\n``` {.python .cell-code}\npd.DataFrame({\n    \"x\" : x,\n    \"err\": err,\n    \"latex\": latex_range_sci(x, x-err, x+err, ndigits=3)\n})\n```\n\n::: {.cell-output .cell-output-display execution_count=6}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>x</th>\n      <th>err</th>\n      <th>latex</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1.000000e+21</td>\n      <td>1.000000e+20</td>\n      <td>$1.000_{-0.100}^{+0.100}~\\times10^{21}$</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>3.000000e+22</td>\n      <td>5.000000e+20</td>\n      <td>$0.300_{-0.005}^{+0.005}~\\times10^{23}$</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1.000000e+23</td>\n      <td>1.000000e+22</td>\n      <td>$1.000_{-0.100}^{+0.100}~\\times10^{23}$</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\nMake errors symmetric if possible\n\n::: {.cell execution_count=7}\n``` {.python .cell-code}\npd.DataFrame({\n    \"x\" : x,\n    \"err\": err,\n    \"latex\": latex_range_sci(x, x-err, x+err, ndigits='auto', symmetry=True)\n})\n```\n\n::: {.cell-output .cell-output-display execution_count=7}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>x</th>\n      <th>err</th>\n      <th>latex</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1.000000e+21</td>\n      <td>1.000000e+20</td>\n      <td>$(1.00\\pm0.10)~\\times10^{21}$</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>3.000000e+22</td>\n      <td>5.000000e+20</td>\n      <td>$(0.300\\pm0.005)~\\times10^{23}$</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1.000000e+23</td>\n      <td>1.000000e+22</td>\n      <td>$(1.00\\pm0.10)~\\times10^{23}$</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\nThe same power\n\n::: {.cell execution_count=8}\n``` {.python .cell-code}\npd.DataFrame({\n    \"x\" : x,\n    \"err\": err,\n    \"latex\": latex_range_sci(x, x-err, x+err, ndigits='auto', symmetry=True, base_pow=22)\n})\n```\n\n::: {.cell-output .cell-output-display execution_count=8}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>x</th>\n      <th>err</th>\n      <th>latex</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1.000000e+21</td>\n      <td>1.000000e+20</td>\n      <td>$(0.100\\pm0.010)~\\times10^{22}$</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>3.000000e+22</td>\n      <td>5.000000e+20</td>\n      <td>$(3.00\\pm0.05)~\\times10^{22}$</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1.000000e+23</td>\n      <td>1.000000e+22</td>\n      <td>$(10.0\\pm1.0)~\\times10^{22}$</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n",
    "supporting": [
      "index_files/figure-html"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}