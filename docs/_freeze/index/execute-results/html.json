{
  "hash": "cb98ea0751f95eb99ca8e26cab2705ed",
  "result": {
    "markdown": "---\ntitle: xraypy\n---\n\n\n\nUseful functions\n\n<!-- badges: start -->\n[![Lifecycle: experimental](https://img.shields.io/badge/lifecycle-experimental-orange.svg)](https://lifecycle.r-lib.org/articles/stages.html#experimental)\n<!-- badges: end -->\n\n## Installation\n\n```bash\npython -m pip install git+https://github.com/uskovgs/xraypy.git\n```\n\n## Usage\n\nThis module is designed for correct rounding of numbers.\n\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nimport numpy as np\nimport pandas as pd\nfrom xraypy.latex_table import latex_range\n\nB=3\nx = np.random.uniform(1, 10, size=B)\nerr_lo = np.random.uniform(0, 1, size=B)\nerr_up = np.random.uniform(0, 1, size=B)\nxmin = x - err_lo\nxmax = x + err_up\n```\n:::\n\n\nNon symmetric errors:\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\npd.DataFrame({\n    \"x\" : x,\n    \"xmin\" : xmin,\n    \"xmax\" : xmax,\n    \"latex\": latex_range(x, xmin, xmax)\n})\n```\n\n::: {.cell-output .cell-output-display execution_count=2}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>x</th>\n      <th>xmin</th>\n      <th>xmax</th>\n      <th>latex</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>6.051688</td>\n      <td>5.938146</td>\n      <td>6.973292</td>\n      <td>$6.05_{-0.11}^{+0.92}$</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>9.390410</td>\n      <td>9.195756</td>\n      <td>9.638920</td>\n      <td>$9.39_{-0.19}^{+0.25}$</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>6.046393</td>\n      <td>5.620787</td>\n      <td>7.030881</td>\n      <td>$6.0_{-0.4}^{+1.0}$</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\nSymemtric errors:\n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\nxmax = x + err_lo\npd.DataFrame({\n    \"x\" : x,\n    \"xmin\" : xmin,\n    \"xmax\" : xmax,\n    \"latex\": latex_range(x, xmin, xmax)\n})\n```\n\n::: {.cell-output .cell-output-display execution_count=3}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>x</th>\n      <th>xmin</th>\n      <th>xmax</th>\n      <th>latex</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>6.051688</td>\n      <td>5.938146</td>\n      <td>6.165230</td>\n      <td>$6.05\\pm0.11$</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>9.390410</td>\n      <td>9.195756</td>\n      <td>9.585065</td>\n      <td>$9.39\\pm0.19$</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>6.046393</td>\n      <td>5.620787</td>\n      <td>6.471998</td>\n      <td>$6.0\\pm0.4$</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n",
    "supporting": [
      "index_files/figure-html"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}